{"version":3,"sources":["Form.js","Table.js","App.js","index.js"],"names":["Form","initialState","name","job","state","handleChange","event","target","value","setState","submitForm","props","handleSubmit","this","htmlFor","type","id","onChange","onClick","Component","TableHeader","TableBody","rows","characterData","map","row","index","removeCharacter","Table","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"iOAEMA,E,4MACFC,aAAe,CACXC,KAAM,GACNC,IAAK,I,EAGTC,MAAQ,EAAKH,a,EAEbI,aAAe,SAAAC,GACX,MAAsBA,EAAMC,OAArBL,EAAP,EAAOA,KAAMM,EAAb,EAAaA,MAEb,EAAKC,SAAL,eACKP,EAAOM,K,EAIhBE,WAAa,WACT,EAAKC,MAAMC,aAAa,EAAKR,OAC7B,EAAKK,SAAS,EAAKR,e,4CAGvB,WACI,MAAoBY,KAAKT,MAAlBF,EAAP,EAAOA,KAAMC,EAAb,EAAaA,IAEb,OACI,iCACI,uBAAOW,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOb,KAAK,OAAOc,GAAG,OAAOR,MAAON,EAAMe,SAAUJ,KAAKR,eACrE,uBACA,uBAAOS,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOb,KAAK,MAAMc,GAAG,MAAMR,MAAOL,EAAKc,SAAUJ,KAAKR,eAClE,4BACI,uBAAOU,KAAK,SAASP,MAAM,SAASU,QAASL,KAAKH,sB,GAhCnDS,aAuCJnB,ICvCToB,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,2CAMVC,EAAY,SAAAV,GACd,IAAMW,EAAOX,EAAMY,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIvB,OACT,6BAAKuB,EAAItB,MACT,6BACI,wBAAQe,QAAS,kBAAMP,EAAMgB,gBAAgBD,IAA7C,wBAJCA,MAUjB,OAAO,gCAAQJ,KAcJM,EAXD,SAAAjB,GACV,IAAOY,EAAkCZ,EAAlCY,cAAeI,EAAmBhB,EAAnBgB,gBAEtB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWJ,cAAeA,EAAeI,gBAAiBA,QChChEE,E,4MACFzB,MAAQ,CACJ0B,WAAY,I,EAEhBH,gBAAkB,SAAAD,GACd,IAAOI,EAAc,EAAK1B,MAAnB0B,WAEP,EAAKrB,SAAS,CACVqB,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMP,Q,EAKzBd,aAAe,SAAAoB,GACX,EAAKvB,SAAS,CAACqB,WAAW,GAAD,mBAAM,EAAK1B,MAAM0B,YAAjB,CAA6BE,O,4CAG1D,WACI,IAAOF,EAAcjB,KAAKT,MAAnB0B,WACP,OACI,sBAAKI,UAAU,YAAf,UACI,cAAC,EAAD,CAAOX,cAAeO,EAAYH,gBAAiBd,KAAKc,kBACxD,cAAC,EAAD,CAAMf,aAAcC,KAAKD,sB,GAvBvBO,aA6BHU,IC3BfM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.10b278d5.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: ''\n    };\n\n    state = this.initialState;\n\n    handleChange = event => {\n        const {name, value} = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    };\n\n    render() {\n        const {name, job} = this.state;\n\n        return (\n            <form>\n                <label htmlFor='name'>Name</label>\n                <input type='text' name='name' id='name' value={name} onChange={this.handleChange} />\n                <br />\n                <label htmlFor='job'>Job</label>\n                <input type='text' name='job' id='job' value={job} onChange={this.handleChange} />\n                <p>\n                    <input type='button' value='Submit' onClick={this.submitForm} />\n                </p>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React from 'react';\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    );\n};\n\nconst TableBody = props => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        );\n    });\n\n    return <tbody>{rows}</tbody>;\n};\n\nconst Table = props => {\n    const {characterData, removeCharacter} = props;\n\n    return (\n        <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n        </table>\n    );\n};\n\nexport default Table;\n","import React, {Component} from 'react';\nimport Form from './Form';\nimport Table from './Table';\nclass App extends Component {\n    state = {\n        characters: []\n    };\n    removeCharacter = index => {\n        const {characters} = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index;\n            })\n        });\n    };\n\n    handleSubmit = character => {\n        this.setState({characters: [...this.state.characters, character]});\n    };\n\n    render() {\n        const {characters} = this.state;\n        return (\n            <div className='container'>\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}